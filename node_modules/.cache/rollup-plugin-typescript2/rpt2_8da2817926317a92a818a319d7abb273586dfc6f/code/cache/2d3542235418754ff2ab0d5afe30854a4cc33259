{"code":"import * as tslib_1 from \"tslib\";\r\nimport { log } from '../../console/log';\r\nimport { CombatSetups, Roles } from '../../creepSetups/setups';\r\nimport { OverlordPriority } from '../../priorities/priorities_overlords';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { boostResources } from '../../resources/map_resources';\r\nimport { CombatOverlord } from '../CombatOverlord';\r\n/**\r\n * Spawns bunker-only defenders to defend against incoming sieges\r\n */\r\nlet BunkerDefenseOverlord = class BunkerDefenseOverlord extends CombatOverlord {\r\n    constructor(directive, boosted = false, priority = OverlordPriority.defense.meleeDefense) {\r\n        // Only spawn inside room\r\n        super(directive, 'bunkerDefense', priority, 1, 30);\r\n        this.lurkers = this.combatZerg(Roles.bunkerGuard, {\r\n            boostWishlist: boosted ? [boostResources.attack[3], boostResources.move[3]]\r\n                : undefined\r\n        });\r\n    }\r\n    handleDefender(lurker) {\r\n        log.debug(`Running BunkerDefender in room ${this.room.print}`);\r\n        if (!lurker.inRampart) {\r\n            const nearRampart = _.find(lurker.room.walkableRamparts, rampart => rampart.pos.getRangeTo(lurker) < 5);\r\n            if (nearRampart) {\r\n                lurker.goTo(nearRampart);\r\n            }\r\n        }\r\n        if (lurker.room.hostiles.length > 0) {\r\n            lurker.autoBunkerCombat(lurker.room.name);\r\n        }\r\n        else {\r\n            // go out of way in bunker\r\n        }\r\n    }\r\n    init() {\r\n        this.reassignIdleCreeps(Roles.bunkerGuard);\r\n        if (this.canBoostSetup(CombatSetups.bunkerGuard.boosted_T3)) {\r\n            const setup = CombatSetups.bunkerGuard.boosted_T3;\r\n            this.wishlist(1, setup);\r\n        }\r\n        else {\r\n            const setup = CombatSetups.bunkerGuard.halfMove;\r\n            this.wishlist(1, setup);\r\n        }\r\n    }\r\n    run() {\r\n        this.autoRun(this.lurkers, lurkers => this.handleDefender(lurkers));\r\n    }\r\n};\r\nBunkerDefenseOverlord.settings = {\r\n    retreatHitsPercent: 0.85,\r\n    reengageHitsPercent: 0.95,\r\n};\r\nBunkerDefenseOverlord = tslib_1.__decorate([\r\n    profile\r\n], BunkerDefenseOverlord);\r\nexport { BunkerDefenseOverlord };\r\n","references":["C:/git/Overmind/src/console/log.ts","C:/git/Overmind/src/creepSetups/setups.ts","C:/git/Overmind/src/directives/defense/invasionDefense.ts","C:/git/Overmind/src/priorities/priorities_overlords.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/resources/map_resources.ts","C:/git/Overmind/src/zerg/CombatZerg.ts","C:/git/Overmind/src/overlords/CombatOverlord.ts"]}
