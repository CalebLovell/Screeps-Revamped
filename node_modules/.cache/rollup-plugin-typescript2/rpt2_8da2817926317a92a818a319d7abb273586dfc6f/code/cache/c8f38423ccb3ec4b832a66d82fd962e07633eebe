{"code":"import * as tslib_1 from \"tslib\";\r\nimport { OverlordPriority } from '../../priorities/priorities_overlords';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Zerg } from '../../zerg/Zerg';\r\nimport { getOverlord, Overlord } from '../Overlord';\r\n/**\r\n * This overlord contains the default actions for any creeps which lack an overlord (for example, miners whose\r\n * miningSite is no longer visible, or guards with no directive)\r\n */\r\nlet DefaultOverlord = class DefaultOverlord extends Overlord {\r\n    constructor(colony) {\r\n        super(colony, 'default', OverlordPriority.default);\r\n        this.idleZerg = [];\r\n    }\r\n    init() {\r\n        // Zergs are collected at end of init phase; by now anything needing to be claimed already has been\r\n        const idleCreeps = _.filter(this.colony.creeps, creep => !getOverlord(creep));\r\n        this.idleZerg = _.map(idleCreeps, creep => Overmind.zerg[creep.name] || new Zerg(creep));\r\n        for (const zerg of this.idleZerg) {\r\n            zerg.refresh();\r\n        }\r\n    }\r\n    run() {\r\n    }\r\n};\r\nDefaultOverlord = tslib_1.__decorate([\r\n    profile\r\n], DefaultOverlord);\r\nexport { DefaultOverlord };\r\n","references":["C:/git/Overmind/src/Colony.ts","C:/git/Overmind/src/priorities/priorities_overlords.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/zerg/Zerg.ts","C:/git/Overmind/src/overlords/Overlord.ts"]}
