{"code":"import * as tslib_1 from \"tslib\";\r\nimport { log } from '../../console/log';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Directive } from '../Directive';\r\nimport { NotifierPriority } from '../Notifier';\r\nexport const TERMINAL_STATE_EVACUATE = {\r\n    name: 'evacuate',\r\n    type: 'out',\r\n    amounts: {},\r\n    tolerance: 500\r\n};\r\nconst EVACUATE_STATE_TIMEOUT = 25000;\r\n/**\r\n * Put the colony's terminal in an evacuation state, which pushes resources out of a room which is about to be breached\r\n */\r\nlet DirectiveTerminalEvacuateState = class DirectiveTerminalEvacuateState extends Directive {\r\n    constructor(flag) {\r\n        super(flag);\r\n        this.refresh();\r\n    }\r\n    refresh() {\r\n        super.refresh();\r\n        // Register abandon status\r\n        this.terminal = this.pos.lookForStructure(STRUCTURE_TERMINAL);\r\n        if (this.terminal) {\r\n            Overmind.terminalNetwork.registerTerminalState(this.terminal, TERMINAL_STATE_EVACUATE);\r\n        }\r\n        if (Game.time % 25 == 0) {\r\n            log.alert(`${this.pos.print}: evacuation terminal state active!`);\r\n        }\r\n    }\r\n    spawnMoarOverlords() {\r\n    }\r\n    init() {\r\n        this.alert('Evacuation terminal state active!', NotifierPriority.High);\r\n    }\r\n    run() {\r\n        // Incubation directive gets removed once the colony has a command center (storage)\r\n        if (!this.colony || !this.terminal || Game.time > (this.memory[\"T\" /* TICK */] || 0) + EVACUATE_STATE_TIMEOUT) {\r\n            this.remove();\r\n        }\r\n    }\r\n};\r\nDirectiveTerminalEvacuateState.directiveName = 'evacuateState';\r\nDirectiveTerminalEvacuateState.color = COLOR_BROWN;\r\nDirectiveTerminalEvacuateState.secondaryColor = COLOR_RED;\r\nDirectiveTerminalEvacuateState = tslib_1.__decorate([\r\n    profile\r\n], DirectiveTerminalEvacuateState);\r\nexport { DirectiveTerminalEvacuateState };\r\n","references":["C:/git/Overmind/src/console/log.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/directives/Directive.ts","C:/git/Overmind/src/directives/Notifier.ts"]}
