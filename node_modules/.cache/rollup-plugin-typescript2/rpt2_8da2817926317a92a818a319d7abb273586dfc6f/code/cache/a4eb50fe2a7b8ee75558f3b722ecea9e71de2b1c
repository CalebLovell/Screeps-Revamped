{"code":"import * as tslib_1 from \"tslib\";\r\nimport { profile } from '../profiler/decorator';\r\nimport { CombatOverlord } from './CombatOverlord';\r\n/**\r\n * SwarmOverlords extend the base CombatOverlord class, providing additional methods for spawning and controlling swarms\r\n */\r\nlet SwarmOverlord = class SwarmOverlord extends CombatOverlord {\r\n    /* Wishlist of creeps to simplify spawning logic; includes automatic reporting */\r\n    // TODO: at the moment, this assumes that every swarm within an overlord is the same configuration\r\n    swarmWishlist(swarmQuantity, config) {\r\n        // Make tables to log current and needed creep quantities\r\n        const creepQuantities = {};\r\n        const neededQuantities = {};\r\n        // Handle filling out existing swarms first\r\n        const validSwarms = _.filter(this.swarms, swarm => !swarm.isExpired);\r\n        for (const swarm of validSwarms) {\r\n            for (const creepType of config) {\r\n                const { setup, amount } = creepType;\r\n                const priority = creepType.priority || this.priority;\r\n                const existingCreepsOfRole = _.filter(swarm.creeps, creep => creep.roleName == setup.role);\r\n                // Log current and needed amounts for reporting\r\n                if (!creepQuantities[setup.role])\r\n                    creepQuantities[setup.role] = 0;\r\n                creepQuantities[setup.role] += existingCreepsOfRole.length;\r\n                if (!neededQuantities[setup.role])\r\n                    neededQuantities[setup.role] = 0;\r\n                neededQuantities[setup.role] += amount;\r\n                // Spawn the needed quantity of creeps\r\n                const spawnQuantity = amount - existingCreepsOfRole.length;\r\n                for (let i = 0; i < spawnQuantity; i++) {\r\n                    this.requestCreep(setup, { priority: priority });\r\n                }\r\n            }\r\n        }\r\n        // Spawn new swarms as needed\r\n        const numRemainingSwarms = swarmQuantity - validSwarms.length;\r\n        for (let n = 0; n < numRemainingSwarms; n++) {\r\n            for (const creepType of config) {\r\n                const { setup, amount } = creepType;\r\n                const priority = creepType.priority || this.priority;\r\n                if (!neededQuantities[setup.role])\r\n                    neededQuantities[setup.role] = 0;\r\n                neededQuantities[setup.role] += amount;\r\n                for (let i = 0; i < amount; i++) {\r\n                    this.requestCreep(setup, { priority: priority + 0.5 });\r\n                }\r\n            }\r\n        }\r\n        // Report creep amounts\r\n        for (const role of _.keys(neededQuantities)) {\r\n            this.creepReport(role, creepQuantities[role] || 0, neededQuantities[role]);\r\n        }\r\n    }\r\n};\r\nSwarmOverlord = tslib_1.__decorate([\r\n    profile\r\n], SwarmOverlord);\r\nexport { SwarmOverlord };\r\n","references":["C:/git/Overmind/src/creepSetups/CreepSetup.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/zerg/Swarm.ts","C:/git/Overmind/src/overlords/CombatOverlord.ts"]}
