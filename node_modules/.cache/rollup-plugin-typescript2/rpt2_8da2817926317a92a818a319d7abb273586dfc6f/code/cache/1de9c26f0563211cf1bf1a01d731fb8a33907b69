{"code":"import * as tslib_1 from \"tslib\";\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const getRenewedTaskName = 'getRenewed';\r\nlet TaskGetRenewed = class TaskGetRenewed extends Task {\r\n    constructor(target, options = {}) {\r\n        super(getRenewedTaskName, target, options);\r\n    }\r\n    isValidTask() {\r\n        const hasClaimPart = _.filter(this.creep.body, (part) => part.type == CLAIM).length > 0;\r\n        const lifetime = hasClaimPart ? CREEP_CLAIM_LIFE_TIME : CREEP_LIFE_TIME;\r\n        return this.creep.ticksToLive != undefined && this.creep.ticksToLive < 0.9 * lifetime;\r\n    }\r\n    isValidTarget() {\r\n        return this.target.my && !this.target.spawning;\r\n    }\r\n    work() {\r\n        return this.target.renewCreep(this.creep.creep);\r\n    }\r\n};\r\nTaskGetRenewed = tslib_1.__decorate([\r\n    profile\r\n], TaskGetRenewed);\r\nexport { TaskGetRenewed };\r\n","references":["C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/tasks/Task.ts"]}
