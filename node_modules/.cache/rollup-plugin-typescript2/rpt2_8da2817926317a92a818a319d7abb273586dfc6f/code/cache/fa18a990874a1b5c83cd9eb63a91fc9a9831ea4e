{"code":"import * as tslib_1 from \"tslib\";\r\nimport { SpawnGroup } from '../logistics/SpawnGroup';\r\nimport { profile } from '../profiler/decorator';\r\nimport { Overlord } from './Overlord';\r\n/**\r\n * CombatOverlords extend the base Overlord class to provide additional combat-specific behavior\r\n */\r\nlet CombatOverlord = class CombatOverlord extends Overlord {\r\n    constructor(directive, name, priority, requiredRCL, maxPathDistance) {\r\n        super(directive, name, priority);\r\n        this.directive = directive;\r\n        this.requiredRCL = requiredRCL;\r\n        this.spawnGroup = new SpawnGroup(this, { requiredRCL: this.requiredRCL, maxPathDistance: maxPathDistance });\r\n    }\r\n    // Standard sequence of actions for running combat creeps\r\n    autoRun(roleCreeps, creepHandler) {\r\n        for (const creep of roleCreeps) {\r\n            if (creep.hasValidTask) {\r\n                creep.run();\r\n            }\r\n            else {\r\n                if (this.shouldBoost(creep)) {\r\n                    this.handleBoosting(creep);\r\n                }\r\n                else {\r\n                    creepHandler(creep);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nCombatOverlord = tslib_1.__decorate([\r\n    profile\r\n], CombatOverlord);\r\nexport { CombatOverlord };\r\n","references":["C:/git/Overmind/src/directives/Directive.ts","C:/git/Overmind/src/logistics/SpawnGroup.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/zerg/CombatZerg.ts","C:/git/Overmind/src/overlords/Overlord.ts"]}
