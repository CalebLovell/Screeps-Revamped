{"code":"import * as tslib_1 from \"tslib\";\r\nvar TaskDrop_1;\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const dropTaskName = 'drop';\r\nlet TaskDrop = TaskDrop_1 = class TaskDrop extends Task {\r\n    constructor(target, resourceType = RESOURCE_ENERGY, amount, options = {}) {\r\n        if (target instanceof RoomPosition) {\r\n            super(TaskDrop_1.taskName, { ref: '', pos: target }, options);\r\n        }\r\n        else {\r\n            super(TaskDrop_1.taskName, { ref: '', pos: target.pos }, options);\r\n        }\r\n        // Settings\r\n        this.settings.targetRange = 0;\r\n        this.settings.oneShot = true;\r\n        // Data\r\n        this.data.resourceType = resourceType;\r\n        this.data.amount = amount;\r\n    }\r\n    isValidTask() {\r\n        const amount = this.data.amount || 1;\r\n        const resourcesInCarry = this.creep.carry[this.data.resourceType] || 0;\r\n        return resourcesInCarry >= amount;\r\n    }\r\n    isValidTarget() {\r\n        return true;\r\n    }\r\n    isValid() {\r\n        // It's necessary to override task.isValid() for tasks which do not have a RoomObject target\r\n        let validTask = false;\r\n        if (this.creep) {\r\n            validTask = this.isValidTask();\r\n        }\r\n        // Return if the task is valid; if not, finalize/delete the task and return false\r\n        if (validTask) {\r\n            return true;\r\n        }\r\n        else {\r\n            // Switch to parent task if there is one\r\n            let isValid = false;\r\n            if (this.parent) {\r\n                isValid = this.parent.isValid();\r\n            }\r\n            this.finish();\r\n            return isValid;\r\n        }\r\n    }\r\n    work() {\r\n        return this.creep.drop(this.data.resourceType, this.data.amount);\r\n    }\r\n};\r\nTaskDrop.taskName = 'drop';\r\nTaskDrop = TaskDrop_1 = tslib_1.__decorate([\r\n    profile\r\n], TaskDrop);\r\nexport { TaskDrop };\r\n","references":["C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/tasks/Task.ts"]}
