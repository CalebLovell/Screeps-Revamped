{"code":"import * as tslib_1 from \"tslib\";\r\nimport { GuardSwarmOverlord } from '../../overlords/defense/guardSwarm';\r\nimport { DefenseNPCOverlord } from '../../overlords/defense/npcDefense';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Directive } from '../Directive';\r\n/**\r\n * NPC defense directive for outpost rooms with invaders\r\n */\r\nlet DirectiveGuard = class DirectiveGuard extends Directive {\r\n    constructor(flag) {\r\n        super(flag);\r\n    }\r\n    spawnMoarOverlords() {\r\n        if (this.colony.level >= DefenseNPCOverlord.requiredRCL) {\r\n            // if (this.memory.enhanced || this.name.includes('enhanced')) {\r\n            // \tthis.overlords.guardPair = new GuardPairOverlord(this);\r\n            // } else {\r\n            this.overlords.guard = new DefenseNPCOverlord(this);\r\n            // }\r\n        }\r\n        else {\r\n            this.overlords.swarmGuard = new GuardSwarmOverlord(this);\r\n        }\r\n    }\r\n    init() {\r\n    }\r\n    run() {\r\n        // If there are no hostiles left in the room...\r\n        if (this.room && this.room.hostiles.length == 0 && this.room.hostileStructures.length == 0) {\r\n            // If everyone's healed up, mark as safe\r\n            if (_.filter(this.room.creeps, creep => creep.hits < creep.hitsMax).length == 0 && !this.memory.safeTick) {\r\n                this.memory.safeTick = Game.time;\r\n            }\r\n            // If has been safe for more than 100 ticks, remove directive\r\n            if (this.memory.safeTick && Game.time - this.memory.safeTick > 100) {\r\n                this.remove();\r\n            }\r\n        }\r\n        else {\r\n            if (this.memory.safeTick) {\r\n                delete this.memory.safeTick;\r\n            }\r\n        }\r\n    }\r\n};\r\nDirectiveGuard.directiveName = 'guard';\r\nDirectiveGuard.color = COLOR_BLUE;\r\nDirectiveGuard.secondaryColor = COLOR_BLUE;\r\nDirectiveGuard = tslib_1.__decorate([\r\n    profile\r\n], DirectiveGuard);\r\nexport { DirectiveGuard };\r\n","references":["C:/git/Overmind/src/overlords/defense/guardSwarm.ts","C:/git/Overmind/src/overlords/defense/npcDefense.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/directives/Directive.ts"]}
