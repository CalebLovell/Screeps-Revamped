{"code":"import * as tslib_1 from \"tslib\";\r\nvar DirectiveOutpost_1;\r\nimport { log } from '../../console/log';\r\nimport { RoomIntel } from '../../intel/RoomIntel';\r\nimport { ReservingOverlord } from '../../overlords/colonization/reserver';\r\nimport { StationaryScoutOverlord } from '../../overlords/scouting/stationary';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Cartographer, ROOMTYPE_CONTROLLER } from '../../utilities/Cartographer';\r\nimport { Directive } from '../Directive';\r\n/**\r\n * Claims a new room and incubates it from the nearest (or specified) colony\r\n */\r\nlet DirectiveOutpost = DirectiveOutpost_1 = class DirectiveOutpost extends Directive {\r\n    spawnMoarOverlords() {\r\n        if (this.colony.level >= DirectiveOutpost_1.settings.canSpawnReserversAtRCL) {\r\n            if (Cartographer.roomType(this.pos.roomName) == ROOMTYPE_CONTROLLER) {\r\n                this.overlords.reserve = new ReservingOverlord(this);\r\n            }\r\n        }\r\n        else {\r\n            this.overlords.scout = new StationaryScoutOverlord(this);\r\n        }\r\n    }\r\n    init() {\r\n    }\r\n    run() {\r\n        if (RoomIntel.roomOwnedBy(this.pos.roomName)) {\r\n            log.warning(`Removing ${this.print} since room is owned!`);\r\n            this.remove();\r\n        }\r\n        if (Game.time % 10 == 3 && this.room && this.room.controller\r\n            && !this.pos.isEqualTo(this.room.controller.pos) && !this.memory.setPosition) {\r\n            this.setPosition(this.room.controller.pos);\r\n        }\r\n    }\r\n};\r\nDirectiveOutpost.directiveName = 'outpost';\r\nDirectiveOutpost.color = COLOR_PURPLE;\r\nDirectiveOutpost.secondaryColor = COLOR_PURPLE;\r\nDirectiveOutpost.settings = {\r\n    canSpawnReserversAtRCL: 3,\r\n};\r\nDirectiveOutpost = DirectiveOutpost_1 = tslib_1.__decorate([\r\n    profile\r\n], DirectiveOutpost);\r\nexport { DirectiveOutpost };\r\n","references":["C:/git/Overmind/src/console/log.ts","C:/git/Overmind/src/intel/RoomIntel.ts","C:/git/Overmind/src/overlords/colonization/reserver.ts","C:/git/Overmind/src/overlords/scouting/stationary.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/utilities/Cartographer.ts","C:/git/Overmind/src/directives/Directive.ts"]}
