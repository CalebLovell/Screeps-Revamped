{"code":"import * as tslib_1 from \"tslib\";\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const signControllerTaskName = 'signController';\r\nlet TaskSignController = class TaskSignController extends Task {\r\n    constructor(target, options = {}) {\r\n        super(signControllerTaskName, target, options);\r\n    }\r\n    isValidTask() {\r\n        return true;\r\n    }\r\n    isValidTarget() {\r\n        const controller = this.target;\r\n        return (!controller.sign || controller.sign.text != Memory.settings.signature) && !controller.signedByScreeps;\r\n    }\r\n    work() {\r\n        return this.creep.signController(this.target, Memory.settings.signature);\r\n    }\r\n};\r\nTaskSignController = tslib_1.__decorate([\r\n    profile\r\n], TaskSignController);\r\nexport { TaskSignController };\r\n","references":["C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/tasks/Task.ts"]}
