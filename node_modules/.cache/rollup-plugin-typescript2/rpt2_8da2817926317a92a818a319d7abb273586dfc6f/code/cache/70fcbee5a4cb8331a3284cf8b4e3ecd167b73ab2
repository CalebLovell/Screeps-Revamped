{"code":"/* Withdraw a resource from a target */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const withdrawAllTaskName = 'withdrawAll';\r\nlet TaskWithdrawAll = class TaskWithdrawAll extends Task {\r\n    constructor(target, options = {}) {\r\n        super(withdrawAllTaskName, target, options);\r\n    }\r\n    isValidTask() {\r\n        return (_.sum(this.creep.carry) < this.creep.carryCapacity);\r\n    }\r\n    isValidTarget() {\r\n        return _.sum(this.target.store) > 0;\r\n    }\r\n    work() {\r\n        for (const resourceType in this.target.store) {\r\n            const amountInStore = this.target.store[resourceType] || 0;\r\n            if (amountInStore > 0) {\r\n                return this.creep.withdraw(this.target, resourceType);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n};\r\nTaskWithdrawAll = tslib_1.__decorate([\r\n    profile\r\n], TaskWithdrawAll);\r\nexport { TaskWithdrawAll };\r\n","references":["C:/git/Overmind/src/declarations/typeGuards.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/tasks/Task.ts"]}
