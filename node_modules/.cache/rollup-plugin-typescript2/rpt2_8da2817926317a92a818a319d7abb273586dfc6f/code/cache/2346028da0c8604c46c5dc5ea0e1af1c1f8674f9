{"code":"import * as tslib_1 from \"tslib\";\r\nimport { isSource } from '../../declarations/typeGuards';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const harvestTaskName = 'harvest';\r\nlet TaskHarvest = class TaskHarvest extends Task {\r\n    constructor(target, options = {}) {\r\n        super(harvestTaskName, target, options);\r\n    }\r\n    isValidTask() {\r\n        return _.sum(this.creep.carry) < this.creep.carryCapacity;\r\n    }\r\n    isValidTarget() {\r\n        if (isSource(this.target)) {\r\n            return this.target.energy > 0;\r\n        }\r\n        else {\r\n            return this.target.mineralAmount > 0;\r\n        }\r\n    }\r\n    work() {\r\n        return this.creep.harvest(this.target);\r\n    }\r\n};\r\nTaskHarvest = tslib_1.__decorate([\r\n    profile\r\n], TaskHarvest);\r\nexport { TaskHarvest };\r\n","references":["C:/git/Overmind/src/declarations/typeGuards.ts","C:/git/Overmind/src/profiler/decorator.ts","C:/git/Overmind/src/tasks/Task.ts"]}
