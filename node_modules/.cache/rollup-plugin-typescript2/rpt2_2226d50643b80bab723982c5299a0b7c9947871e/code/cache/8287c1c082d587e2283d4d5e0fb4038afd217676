{"code":"import * as tslib_1 from \"tslib\";\r\nimport { Roles, Setups } from '../../creepSetups/setups';\r\nimport { OverlordPriority } from '../../priorities/priorities_overlords';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Tasks } from '../../tasks/Tasks';\r\nimport { Overlord } from '../Overlord';\r\nconst DEFAULT_NUM_SCOUTS = 3;\r\n/**\r\n * Sends out scouts which randomly traverse rooms to uncover possible expansion locations and gather intel\r\n */\r\nlet RandomWalkerScoutOverlord = class RandomWalkerScoutOverlord extends Overlord {\r\n    constructor(colony, priority = OverlordPriority.scouting.randomWalker) {\r\n        super(colony, 'scout', priority);\r\n        this.scouts = this.zerg(Roles.scout, { notifyWhenAttacked: false });\r\n    }\r\n    init() {\r\n        this.wishlist(DEFAULT_NUM_SCOUTS, Setups.scout);\r\n    }\r\n    handleScout(scout) {\r\n        // Stomp on enemy construction sites\r\n        const enemyConstructionSites = scout.room.find(FIND_HOSTILE_CONSTRUCTION_SITES);\r\n        if (enemyConstructionSites.length > 0 && enemyConstructionSites[0].pos.isWalkable(true)) {\r\n            scout.goTo(enemyConstructionSites[0].pos);\r\n            return;\r\n        }\r\n        // Check if room might be connected to newbie/respawn zone\r\n        const indestructibleWalls = _.filter(scout.room.walls, wall => wall.hits == undefined);\r\n        if (indestructibleWalls.length > 0) { // go back to origin colony if you find a room near newbie zone\r\n            scout.task = Tasks.goToRoom(this.colony.room.name); // todo: make this more precise\r\n        }\r\n        else {\r\n            // Pick a new room\r\n            const neighboringRooms = _.values(Game.map.describeExits(scout.pos.roomName));\r\n            const roomName = _.sample(neighboringRooms);\r\n            if (Game.map.isRoomAvailable(roomName)) {\r\n                scout.task = Tasks.goToRoom(roomName);\r\n            }\r\n        }\r\n    }\r\n    run() {\r\n        this.autoRun(this.scouts, scout => this.handleScout(scout));\r\n    }\r\n};\r\nRandomWalkerScoutOverlord = tslib_1.__decorate([\r\n    profile\r\n], RandomWalkerScoutOverlord);\r\nexport { RandomWalkerScoutOverlord };\r\n","references":["C:/git/Screeps-Revamped/src/Colony.ts","C:/git/Screeps-Revamped/src/creepSetups/setups.ts","C:/git/Screeps-Revamped/src/priorities/priorities_overlords.ts","C:/git/Screeps-Revamped/src/profiler/decorator.ts","C:/git/Screeps-Revamped/src/tasks/Tasks.ts","C:/git/Screeps-Revamped/src/zerg/Zerg.ts","C:/git/Screeps-Revamped/src/overlords/Overlord.ts"]}
