{"code":"import * as tslib_1 from \"tslib\";\r\nimport { log } from '../../console/log';\r\nimport { CombatIntel } from '../../intel/CombatIntel';\r\nimport { PairDestroyerOverlord } from '../../overlords/offense/pairDestroyer';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Visualizer } from '../../visuals/Visualizer';\r\nimport { Directive } from '../Directive';\r\n/**\r\n * Spawns a pair of attacker/healer creeps to siege a room\r\n */\r\nlet DirectivePairDestroy = class DirectivePairDestroy extends Directive {\r\n    constructor(flag) {\r\n        super(flag);\r\n    }\r\n    spawnMoarOverlords() {\r\n        this.overlords.destroy = new PairDestroyerOverlord(this);\r\n    }\r\n    init() {\r\n        this.alert(`Pair detroyer directive active`);\r\n    }\r\n    run() {\r\n        // If there are no hostiles left in the room then remove the flag and associated healpoint\r\n        if (this.room && this.room.hostiles.length == 0 && this.room.hostileStructures.length == 0) {\r\n            log.notify(`Pair destroyer mission at ${this.pos.roomName} completed successfully.`);\r\n            this.remove();\r\n        }\r\n    }\r\n    visuals() {\r\n        Visualizer.marker(this.pos, { color: 'red' });\r\n        const fallback = CombatIntel.getFallbackFrom(this.pos);\r\n        Visualizer.marker(fallback, { color: 'green' });\r\n    }\r\n};\r\nDirectivePairDestroy.directiveName = 'destroy';\r\nDirectivePairDestroy.color = COLOR_RED;\r\nDirectivePairDestroy.secondaryColor = COLOR_CYAN;\r\nDirectivePairDestroy = tslib_1.__decorate([\r\n    profile\r\n], DirectivePairDestroy);\r\nexport { DirectivePairDestroy };\r\n","references":["C:/git/Screeps-Revamped/src/console/log.ts","C:/git/Screeps-Revamped/src/intel/CombatIntel.ts","C:/git/Screeps-Revamped/src/overlords/offense/pairDestroyer.ts","C:/git/Screeps-Revamped/src/profiler/decorator.ts","C:/git/Screeps-Revamped/src/visuals/Visualizer.ts","C:/git/Screeps-Revamped/src/directives/Directive.ts"]}
