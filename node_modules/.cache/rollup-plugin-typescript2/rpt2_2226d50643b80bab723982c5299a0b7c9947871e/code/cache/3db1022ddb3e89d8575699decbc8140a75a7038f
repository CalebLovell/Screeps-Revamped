{"code":"import * as tslib_1 from \"tslib\";\r\nimport { CombatSetups, Roles } from '../../creepSetups/setups';\r\nimport { CombatIntel } from '../../intel/CombatIntel';\r\nimport { OverlordPriority } from '../../priorities/priorities_overlords';\r\nimport { profile } from '../../profiler/decorator';\r\nimport { boostResources } from '../../resources/map_resources';\r\nimport { CombatOverlord } from '../CombatOverlord';\r\n/**\r\n * Spawns melee defenders to defend against incoming player invasions in an owned room\r\n */\r\nlet MeleeDefenseOverlord = class MeleeDefenseOverlord extends CombatOverlord {\r\n    constructor(directive, boosted = false, priority = OverlordPriority.defense.meleeDefense) {\r\n        super(directive, 'meleeDefense', priority, 1);\r\n        this.zerglings = this.combatZerg(Roles.melee, {\r\n            boostWishlist: boosted ? [boostResources.tough[3], boostResources.attack[3], boostResources.move[3]]\r\n                : undefined\r\n        });\r\n    }\r\n    handleDefender(zergling) {\r\n        if (zergling.room.hostiles.length > 0) {\r\n            zergling.autoCombat(zergling.room.name);\r\n        }\r\n    }\r\n    computeNeededZerglingAmount(setup, boostMultiplier) {\r\n        const healAmount = CombatIntel.maxHealingByCreeps(this.room.hostiles);\r\n        const zerglingDamage = ATTACK_POWER * boostMultiplier * setup.getBodyPotential(ATTACK, this.colony);\r\n        const towerDamage = this.room.hostiles[0] ? CombatIntel.towerDamageAtPos(this.room.hostiles[0].pos) || 0 : 0;\r\n        const worstDamageMultiplier = _.min(_.map(this.room.hostiles, creep => CombatIntel.minimumDamageTakenMultiplier(creep)));\r\n        return Math.ceil(.5 + 1.5 * healAmount / (worstDamageMultiplier * (zerglingDamage + towerDamage + 1)));\r\n    }\r\n    init() {\r\n        this.reassignIdleCreeps(Roles.melee);\r\n        if (this.canBoostSetup(CombatSetups.zerglings.boosted_T3_defense)) {\r\n            const setup = CombatSetups.zerglings.boosted_T3_defense;\r\n            this.wishlist(this.computeNeededZerglingAmount(setup, BOOSTS.attack.XUH2O.attack), setup);\r\n        }\r\n        else {\r\n            const setup = CombatSetups.zerglings.default;\r\n            this.wishlist(this.computeNeededZerglingAmount(setup, 1), setup);\r\n        }\r\n    }\r\n    run() {\r\n        this.autoRun(this.zerglings, zergling => this.handleDefender(zergling));\r\n    }\r\n};\r\nMeleeDefenseOverlord.settings = {\r\n    retreatHitsPercent: 0.75,\r\n    reengageHitsPercent: 0.95,\r\n};\r\nMeleeDefenseOverlord = tslib_1.__decorate([\r\n    profile\r\n], MeleeDefenseOverlord);\r\nexport { MeleeDefenseOverlord };\r\n","references":["C:/git/Screeps-Revamped/src/creepSetups/CreepSetup.ts","C:/git/Screeps-Revamped/src/creepSetups/setups.ts","C:/git/Screeps-Revamped/src/directives/defense/invasionDefense.ts","C:/git/Screeps-Revamped/src/intel/CombatIntel.ts","C:/git/Screeps-Revamped/src/priorities/priorities_overlords.ts","C:/git/Screeps-Revamped/src/profiler/decorator.ts","C:/git/Screeps-Revamped/src/resources/map_resources.ts","C:/git/Screeps-Revamped/src/zerg/CombatZerg.ts","C:/git/Screeps-Revamped/src/overlords/CombatOverlord.ts"]}
