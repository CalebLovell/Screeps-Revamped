{"code":"import * as tslib_1 from \"tslib\";\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const transferAllTaskName = 'transferAll';\r\nlet TaskTransferAll = class TaskTransferAll extends Task {\r\n    constructor(target, skipEnergy = false, options = {}) {\r\n        super(transferAllTaskName, target, options);\r\n        this.data.skipEnergy = skipEnergy;\r\n    }\r\n    isValidTask() {\r\n        for (const resourceType in this.creep.carry) {\r\n            if (this.data.skipEnergy && resourceType == RESOURCE_ENERGY) {\r\n                continue;\r\n            }\r\n            const amountInCarry = this.creep.carry[resourceType] || 0;\r\n            if (amountInCarry > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isValidTarget() {\r\n        return _.sum(this.target.store) < this.target.storeCapacity;\r\n    }\r\n    work() {\r\n        for (const resourceType in this.creep.carry) {\r\n            if (this.data.skipEnergy && resourceType == RESOURCE_ENERGY) {\r\n                continue;\r\n            }\r\n            const amountInCarry = this.creep.carry[resourceType] || 0;\r\n            if (amountInCarry > 0) {\r\n                return this.creep.transfer(this.target, resourceType);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n};\r\nTaskTransferAll = tslib_1.__decorate([\r\n    profile\r\n], TaskTransferAll);\r\nexport { TaskTransferAll };\r\n","references":["C:/git/Screeps-Revamped/src/profiler/decorator.ts","C:/git/Screeps-Revamped/src/tasks/Task.ts"]}
