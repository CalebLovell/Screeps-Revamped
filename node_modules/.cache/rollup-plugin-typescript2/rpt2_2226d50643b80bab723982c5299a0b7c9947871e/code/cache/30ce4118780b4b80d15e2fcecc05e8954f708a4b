{"code":"import * as tslib_1 from \"tslib\";\r\nimport { profile } from '../../profiler/decorator';\r\nimport { Task } from '../Task';\r\nexport const repairTaskName = 'repair';\r\nlet TaskRepair = class TaskRepair extends Task {\r\n    constructor(target, options = {}) {\r\n        super(repairTaskName, target, options);\r\n        // Settings\r\n        this.settings.timeout = 100;\r\n        this.settings.targetRange = 3;\r\n    }\r\n    isValidTask() {\r\n        return this.creep.carry.energy > 0;\r\n    }\r\n    isValidTarget() {\r\n        return this.target && this.target.hits < this.target.hitsMax;\r\n    }\r\n    work() {\r\n        const result = this.creep.repair(this.target);\r\n        if (this.target.structureType == STRUCTURE_ROAD) {\r\n            // prevents workers from idling for a tick before moving to next target\r\n            const newHits = this.target.hits + this.creep.getActiveBodyparts(WORK) * REPAIR_POWER;\r\n            if (newHits > this.target.hitsMax) {\r\n                this.finish();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n};\r\nTaskRepair = tslib_1.__decorate([\r\n    profile\r\n], TaskRepair);\r\nexport { TaskRepair };\r\n","references":["C:/git/Screeps-Revamped/src/profiler/decorator.ts","C:/git/Screeps-Revamped/src/tasks/Task.ts"]}
